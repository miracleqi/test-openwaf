[
    {
        "id": "100022",
        "release_version": "858",
        "charactor_version": "001",
        "opts": {
            "nolog": false
        },
        "phase": "access",
        "action": "deny",
        "meta": "403",
        "severity": "medium",
        "rule_name": "attack.commentSpam",
        "desc": "检测垃圾信息，检查User-Agent请求头的值为常见垃圾广告发送者的HTTP请求",
        "match": [
            {
                "vars": [
                    {
                        "var": "REQUEST_HEADERS",
                        "parse": {
                            "specific": "User-Agent"
                        }
                    }
                ],
                "operator": "regex",
                "pattern": "^(?:m(?:o(?:zilla\\\\/4\\.0\\+?\\(|vable type)|i(?:crosoft url|ssigua)|j12bot\\\\/v1\\.0\\.8|sie)|e(?:mail(?:collector| ?siphon)|collector)|(?:blogsearchbot-marti|super happy fu)n|i(?:nternet explorer|sc systems irc)|ja(?:karta commons|va(?:\\\\/| )1\\.)|c(?:ore-project\\\\/|herrypicker)|p(?:sycheclone|ussycat|ycurl)|(?:grub crawl|omniexplor)er|a(?:utoemailspider|dwords)|w(?:innie poh|ordpress)|nut(?:scrape\\/|chcvs)|8484 boston project|user(?:[- ]agent:)?|l(?:ibwww-perl|wp)|di(?:amond|gger)|trackback\\\\/|httpproxy|<sc)"
            }
        ]
    },
    {
        "id": "100023",
        "release_version": "858",
        "charactor_version": "001",
        "opts": {
            "nolog": false,
            "setvar": [
                {
                    "column": "TX",
                    "key": "anomaly_score",
                    "value": 5,
                    "incr": true
                }
            ]
        },
        "phase": "access",
        "action": "pass",
        "severity": "medium",
        "rule_name": "attack.commentSpam.a",
        "desc": "检测垃圾信息，检查参数中以http:开头的HTTP请求",
        "match": [
            {
                "vars": [
                    {
                        "var": "ARGS"
                    },
                    {
                        "var": "ARGS_NAMES"
                    }
                ],
                "transform": [
                    "uri_decode_uni",
                    "html_decode",
                    "compress_whitespace",
                    "lowercase"
                ],
                "operator": "regex",
                "pattern": "\\bhttp:"
            },
            {
                "vars": [
                    {
                        "var": "ARGS"
                    },
                    {
                        "var": "ARGS_NAMES"
                    }
                ],
                "transform": [
                    "uri_decode_uni",
                    "html_decode",
                    "compress_whitespace",
                    "lowercase"
                ],
                "operator": "regex",
                "pattern": "\\[url\\b"
            },
            {
                "vars": [
                    {
                        "var": "ARGS"
                    },
                    {
                        "var": "ARGS_NAMES"
                    }
                ],
                "transform": [
                    "uri_decode_uni",
                    "html_decode",
                    "compress_whitespace",
                    "lowercase"
                ],
                "operator": "contains",
                "pattern": "<a"
            }
        ]
    },
    {
        "id": "100024",
        "release_version": "858",
        "charactor_version": "001",
        "opts": {
            "nolog": false,
            "setvar": [
                {
                    "column": "TX",
                    "key": "anomaly_score",
                    "value": 5,
                    "incr": true
                }
            ]
        },
        "phase": "access",
        "action": "pass",
        "severity": "medium",
        "rule_name": "attack.commentSpam.b",
        "desc": "检测垃圾信息，检查参数中含有4个及以上http:/的HTTP请求",
        "match": [
            {
                "vars": [
                    {
                        "var": "ARGS"
                    },
                    {
                        "var": "ARGS_NAMES"
                    }
                ],
                "transform": [
                    "uri_decode_uni",
                    "html_decode",
                    "compress_whitespace",
                    "lowercase"
                ],
                "operator": "regex",
                "pattern": "(?:http:\\\\/.*?){4}"
            }
        ]
    },
    {
        "id": "100025",
        "release_version": "858",
        "charactor_version": "001",
        "opts": {
            "nolog": false
        },
        "phase": "access",
        "action": "deny",
        "meta": "403",
        "severity": "high",
        "rule_name": "attack.dirTraversal",
        "desc": "检测路径遍历攻击，检查请求URI、请求头、请求体",
        "match": [
            {
                "vars": [
                    {
                        "var": "REQUEST_URI"
                    },
                    {
                        "var": "REQUEST_BODY"
                    },
                    {
                        "var": "REQUEST_HEADERS"
                    },
                    {
                        "var": "REQUEST_HEADERS",
                        "parse": {
                            "specific": "Referer"
                        }
                    }
                ],
                "operator": "regex",
                "pattern": "(?i)(?:\\x5c|(?:%(?:2(?:5(?:2f|5c)|%46|f)|c(?:0%(?:9v|af)|1%1c)|u(?:221[56]|002f)|%32(?:%46|F)|e0%80%af|1u|5c)|\\\\/))(?:%(?:2(?:(?:52)?e|%45)|(?:e0%8|c)0%ae|u(?:002e|2024)|%32(?:%45|E))|\\.){2}(?:\\x5c|(?:%(?:2(?:5(?:2f|5c)|%46|f)|c(?:0%(?:9v|af)|1%1c)|u(?:221[56]|002f)|%32(?:%46|F)|e0%80%af|1u|5c)|\\\\/))"
            }
        ]
    },
    {
        "id": "100026",
        "release_version": "858",
        "charactor_version": "001",
        "opts": {
            "nolog": false
        },
        "phase": "access",
        "action": "deny",
        "meta": "403",
        "severity": "high",
        "rule_name": "attack.dirTraversal.a",
        "desc": "检测路径遍历攻击，检查请求文件名、参数",
        "match": [
            {
                "vars": [
                    {
                        "var": "REQUEST_FILENAME"
                    },
                    {
                        "var": "ARGS"
                    }
                ],
                "transform": "uri_decode_uni",
                "operator": "regex",
                "pattern": "(?<![\\\"\\'])\\.\\.[\\/\\x5c]"
            }
        ]
    },
    {
        "id": "100087",
        "release_version": "858",
        "charactor_version": "001",
        "opts": {
            "nolog": false
        },
        "phase": "access",
        "action": "deny",
        "meta": "403",
        "severity": "critical",
        "rule_name": "attack.injection.cf",
        "desc": "检测针对ColdFusion服务器的注入攻击，检查Cookie、参数",
        "match": [
            {
                "vars": [
                    {
                        "var": "REQUEST_COOKIES"
                    },
                    {
                        "var": "REQUEST_COOKIES_NAMES"
                    },
                    {
                        "var": "ARGS"
                    },
                    {
                        "var": "ARGS_NAMES"
                    }
                ],
                "transform": [
                    "html_decode",
                    "lowercase"
                ],
                "operator": "regex",
                "pattern": "\\bcf(?:usion_(?:d(?:bconnections_flush|ecrypt)|set(?:tings_refresh|odbcini)|getodbc(?:dsn|ini)|verifymail|encrypt)|_(?:(?:iscoldfusiondatasourc|getdatasourceusernam)e|setdatasource(?:password|username))|newinternal(?:adminsecurit|registr)y|admin_registry_(?:delete|set)|internaldebug)\\b"
            }
        ]
    },
    {
        "id": "100088",
        "release_version": "858",
        "charactor_version": "001",
        "opts": {
            "nolog": false
        },
        "phase": "access",
        "action": "deny",
        "meta": "403",
        "severity": "critical",
        "rule_name": "attack.injection.cf.a",
        "desc": "检测针对ColdFusion服务器的注入攻击，检查请求URI、请求头、请求体",
        "match": [
            {
                "vars": [
                    {
                        "var": "REQUEST_URI"
                    },
                    {
                        "var": "REQUEST_BODY"
                    },
                    {
                        "var": "REQUEST_HEADERS_NAMES"
                    },
                    {
                        "var": "REQUEST_HEADERS",
                        "parse": {
                            "ignore": "Referer"
                        }
                    }
                ],
                "transform": [
                    "uri_decode_uni",
                    "html_decode",
                    "lowercase"
                ],
                "operator": "regex",
                "pattern": "\\bcf(?:usion_(?:d(?:bconnections_flush|ecrypt)|set(?:tings_refresh|odbcini)|getodbc(?:dsn|ini)|verifymail|encrypt)|_(?:(?:iscoldfusiondatasourc|getdatasourceusernam)e|setdatasource(?:password|username))|newinternal(?:adminsecurit|registr)y|admin_registry_(?:delete|set)|internaldebug)\b"
            }
        ]
    },
    {
        "id": "100205",
        "release_version": "858",
        "charactor_version": "001",
        "opts": {
            "nolog": false
        },
        "phase": "access",
        "action": "deny",
        "meta": "403",
        "severity": "critical",
        "rule_name": "attack.injection.ldap",
        "desc": "检测LDAP注入攻击，检查Cookie、参数",
        "match": [
            {
                "vars": [
                    {
                        "var": "REQUEST_COOKIES"
                    },
                    {
                        "var": "REQUEST_COOKIES_NAMES"
                    },
                    {
                        "var": "ARGS_NAMES"
                    },
                    {
                        "var": "ARGS"
                    }
                ],
                "transform": [
                    "html_decode",
                    "lowercase"
                ],
                "operator": "regex",
                "pattern": "(?:\\((?:\\W*?(?:objectc(?:ategory|lass)|homedirectory|[gu]idnumber|cn)\\b\\W*?=|[^\\w\\x80-\\xFF]*?[\\!\\&\\|][^\\w\\x80-\\xFF]*?\\()|\\)[^\\w\\x80-\\xFF]*?\\([^\\w\\x80-\\xFF]*?[\\!\\&\\|])"
            }
        ]
    },
    {
        "id": "100206",
        "release_version": "858",
        "charactor_version": "001",
        "opts": {
            "nolog": false
        },
        "phase": "access",
        "action": "deny",
        "meta": "403",
        "severity": "critical",
        "rule_name": "attack.injection.ldap.a",
        "desc": "检测LDAP注入攻击，检查请求URI、请求头、请求体",
        "match": [
            {
                "vars": [
                    {
                        "var": "REQUEST_URI"
                    },
                    {
                        "var": "REQUEST_BODY"
                    },
                    {
                        "var": "REQUEST_HEADERS_NAMES"
                    },
                    {
                        "var": "REQUEST_HEADERS",
                        "parse": {
                            "ignore": "Referer"
                        }
                    }
                ],
                "transform": [
                    "html_decode",
                    "lowercase"
                ],
                "operator": "regex",
                "pattern": "(?:\\((?:\\W*?(?:objectc(?:ategory|lass)|homedirectory|[gu]idnumber|cn)\\b\\W*?=|[^\\w\\x80-\\xFF]*?[\\!\\&\\|][^\\w\\x80-\\xFF]*?\\()|\\)[^\\w\\x80-\\xFF]*?\\([^\\w\\x80-\\xFF]*?[\\!\\&\\|])"
            }
        ]
    },
    {
        "id": "100207",
        "release_version": "858",
        "charactor_version": "001",
        "opts": {
            "nolog": false,
            "setvar": [
                {
                    "column": "TX",
                    "key": "anomaly_score",
                    "value": 10,
                    "incr": true
                }
            ]
        },
        "phase": "access",
        "action": "pass",
        "severity": "critical",
        "rule_name": "attack.injection.osCmd",
        "desc": "检测命令注入攻击，检查Cookie、参数",
        "match": [
            {
                "vars": [
                    {
                        "var": "REQUEST_COOKIES"
                    },
                    {
                        "var": "REQUEST_COOKIES_NAMES"
                    },
                    {
                        "var": "ARGS_NAMES"
                    },
                    {
                        "var": "ARGS",
                        "parse": {
                            "ignore": [
                                "__VIEWSTATE",
                                "__EVENTVALIDATION"
                            ]
                        }
                    }
                ],
                "transform": "normalise_path",
                "operator": "regex",
                "pattern": "(?i:(?:[\\;\\|\\`]\\W*?\\bcc|\\b(wget|curl))\\b|\\\\/cc(?:[\\'\\\"\\|\\;\\`\\-\\s]|$))"
            }
        ]
    },
    {
        "id": "200001",
        "release_version": "858",
        "charactor_version": "001",
        "opts": {
            "nolog": false
        },
        "phase": "access",
        "action": "deny",
        "meta": "403",
        "severity": "critical",
        "rule_name": "attack.injection.sql.libinjection",
        "desc": "sqli防护",
        "match": [
            {
                "vars": [
                    {
                        "var": "REQUEST_FILENAME"
                    },
                    {
                        "var": "ARGS_NAMES"
                    },
                    {
                        "var": "ARGS",
                        "parse": {
                            "ignore": [
                                "__VIEWSTATE",
                                "__EVENTVALIDATION"
                            ]
                        }
                    }
                ],
                "transform": "uri_decode_uni",
                "operator": "detect_sqli"
            }
        ]
    },
    {
        "id": "200002",
        "release_version": "858",
        "charactor_version": "001",
        "opts": {
            "nolog": false
        },
        "phase": "access",
        "action": "deny",
        "meta": "403",
        "severity": "high",
        "rule_name": "attack.xss.libinjection",
        "desc": "xss防护",
        "match": [
            {
                "vars": [
                    {
                        "var": "REQUEST_METHOD"
                    }
                ],
                "operator": "equal",
                "pattern": "GET"
            },
            {
                "vars": [
                    {
                        "var": "REQUEST_FILENAME"
                    },
                    {
                        "var": "ARGS_NAMES"
                    },
                    {
                        "var": "ARGS",
                        "parse": {
                            "ignore": [
                                "__VIEWSTATE",
                                "__EVENTVALIDATION"
                            ]
                        }
                    }
                ],
                "transform": "html_decode",
                "operator": "detect_xss"
            }
        ]
    }
]